# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/14_results.ipynb (unless otherwise specified).

__all__ = ['TextResult']

# Cell
from abc import ABC, abstractmethod
from fastcore.basics import mk_class

# Cell
mk_class('DetailLevel', **{o:o.lower() for o in ['Low','Medium','High']},
        doc="All possible detail levels as attributes to get tab-completion and typo-proofing")

# Cell
class TextResult(ABC):
    """
    A basic model output representation
    """

    @abstractmethod
    def show(self, tokenized=False, detail=0):
        "Show some results, in a potential level of detail"
        raise NotImplementedError("This functionality is not yet supported for this application.")

    @abstractmethod
    def to_dict(self, detail_level=DetailLevel.Low) -> dict:
        """
        Exports `self` as a dictionary, with a variety of detail levels
        """
        raise NotImplementedError("This functionality is not yet supported for this application.")